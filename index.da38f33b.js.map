{"mappings":"AACA,MAAMA,EAAYC,SAASC,cAAc,cAEvB,ICKH,MACbC,cACEC,KAAKC,YAAc,GACnBD,KAAKE,KAAO,C,CAGdC,oBACE,MAIMC,EAAW,6FAHI,IAAIC,gBAAgB,CACvCH,KAAMF,KAAKE,SAIRI,aAAaC,QAAQ,iBACxBP,KAAKQ,YAGP,IACE,MAAMC,QAAiBC,MAAMN,GACvBO,QAAaF,EAASG,OAK5B,OAHAZ,KAAKa,gBAGEF,C,CACP,MAAOG,GACPC,QAAQD,MAAMA,E,EAIlBX,qBACE,MAMMC,EAAW,uFALI,IAAIC,gBAAgB,CACvCH,KAAMF,KAAKE,KACXc,MAAOhB,KAAKC,gBAKTK,aAAaC,QAAQ,iBACxBP,KAAKQ,YAGP,IACE,MAAMC,QAAiBC,MAAMN,GACvBO,QAAaF,EAASG,OAG5B,OADAG,QAAQE,IAAIN,GACLA,C,CACP,MAAOG,GACPC,QAAQD,MAAMA,E,EAIlBX,kBAIE,IACE,MAAMM,QAAiBC,MAHR,0FAITC,QAAaF,EAASG,OAEtBM,EAAe,GAKrB,OAJAP,EAAKQ,OAAOC,SAAQ,EAACC,GAAEA,EAAEC,KAAEA,KAAYJ,EAAaG,GAAMC,IAC1DhB,aAAaiB,QAAQ,eAAgBC,KAAKC,UAAUP,IAEpDH,QAAQE,IAAIN,GACLA,C,CACP,MAAOG,GACPC,QAAQD,MAAMA,E,EAIlBD,gBACE,OAAQb,KAAKE,MAAQ,C,CAGvBwB,YACE,OAAQ1B,KAAKE,KAAO,C,CAGlBc,YACF,OAAOhB,KAAKC,W,CAGVe,UAAMW,GACR3B,KAAKC,YAAc0B,C,ID3FaC,cAC1BC,MAEV,SAAsBC,GAEpB,MACMC,EAASD,EAAOE,QACnBC,KAAIC,IACH,MACEC,YAAaC,EAAUC,MACvBA,EACAC,UAAWC,EACXC,aAAcC,GACZP,EACJ,MAAO,wHATM,kCAUAE,UACJC,qFAAyFA,+DAE1FE,EAASG,OAAS,EAAIH,EAAWA,EAASI,MAAM,EAAG,GAAK,gEAErBF,EAAWE,MAAM,EAAG,sCAC3C,IAErBC,KAAK,IAERhD,EAAUiD,mBAAmB,YAAad,E,IAxBfe,OAAMC,GAAOhC,QAAQE,IAAI,UAAW8B","sources":["src/js/render-cards.js","src/js/restAPI/restAPI.js"],"sourcesContent":["import FilmRestAPI from './restAPI/restAPI';\nconst cardSetEl = document.querySelector('.card-set');\n\nconst getMovies = new FilmRestAPI().fetchMovies();\ngetMovies.then(renderMovies).catch(err => console.log('Error: ', err));\n\nfunction renderMovies(movies) {\n//   console.log(movies.results);\n  const IMG_BASE = 'https://image.tmdb.org/t/p/w400';\n  const markup = movies.results\n    .map(movie => {\n      const {\n        poster_path: posterPath,\n        title,\n        genre_ids: genreIds,\n        release_date: releseDate,\n      } = movie;\n      return `<li class=\"card-set__item movie-card\"><a href=\"#!\" class=\"movie-card__link\"><div class=\"movie-card__holder\"><img src=${\n        IMG_BASE + posterPath\n      } alt=\"${title} poster\" class=\"movie-card__img\" width=\"100%\"></div><p class=\"movie-card__title\">${title}            \n            </p><p class=\"movie-card__genre\">${\n              genreIds.length < 3 ? genreIds : genreIds.slice(0, 2) + ', Other'\n            } | \n                <span class=\"movie-card__date\">${releseDate.slice(0, 4)}</span>\n            </p></a></li>`;\n    })\n    .join('');\n\n  cardSetEl.insertAdjacentHTML('beforeend', markup);\n}\n\n\n\n","// API-Key\n// 4c6e55add2f00844e9f979bd7b0fac7c\n\n//-created class with methods:\n//  -fetchMovies(movies for main page)\n//  -searchMovies(for search form)\n//  -getGenres(returned array of objects, which include genreID and genreName)\n\nexport default class FilmRestAPI {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async fetchMovies() {\n    const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n    const searchParams = new URLSearchParams({\n      page: this.page,\n    });\n    const BASE_URL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&${searchParams}`;\n\n    if (!localStorage.getItem('MOVIE_GENRES')) {\n      this.getGenres();\n    }\n\n    try {\n      const response = await fetch(BASE_URL);\n      const data = await response.json();\n\n      this.incrementPage();\n\n      // console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async searchMovies() {\n    const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n    const searchParams = new URLSearchParams({\n      page: this.page,\n      query: this.searchQuery,\n    });\n\n    const BASE_URL = ` https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&${searchParams}`;\n\n    if (!localStorage.getItem('MOVIE_GENRES')) {\n      this.getGenres();\n    }\n\n    try {\n      const response = await fetch(BASE_URL);\n      const data = await response.json();\n\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getGenres() {\n    const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n    const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(BASE_URL);\n      const data = await response.json();\n\n      const parsedGenres = {};\n      data.genres.forEach(({ id, name }) => (parsedGenres[id] = name));\n      localStorage.setItem('MOVIE_GENRES', JSON.stringify(parsedGenres));\n\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  incrementPage() {\n    return (this.page += 1);\n  }\n\n  resetPage() {\n    return (this.page = 1);\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n"],"names":["$13315e1086e5db7e$var$cardSetEl","document","querySelector","constructor","this","searchQuery","page","async","BASE_URL","URLSearchParams","localStorage","getItem","getGenres","response","fetch","data","json","incrementPage","error","console","query","log","parsedGenres","genres","forEach","id","name","setItem","JSON","stringify","resetPage","newQuery","fetchMovies","then","movies","markup","results","map","movie","poster_path","posterPath","title","genre_ids","genreIds","release_date","releseDate","length","slice","join","insertAdjacentHTML","catch","err"],"version":3,"file":"index.da38f33b.js.map"}