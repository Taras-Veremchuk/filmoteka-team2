{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/render-cards.js","node_modules/@parcel/runtime-js/lib/runtime-bd5c34c18d96e10a.js","src/js/restAPI.js","src/js/refs.js","src/js/open-modal.js","src/js/refresh-library.js","src/js/theme.js","node_modules/@parcel/runtime-js/lib/runtime-591ca3a57b713e7f.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import defaultPoster from '../images/default-poster.jpg';\n\nexport function renderMovies(movies) {\n  const IMG_BASE = 'https://image.tmdb.org/t/p/w400';\n  const genresList = JSON.parse(localStorage.getItem('MOVIE_GENRES'));\n  const markup = movies\n    .map(movie => {\n      const {\n        poster_path: posterPath,\n        title,\n        id,\n        genre_ids: genreIds = [],\n        release_date: releseDate = '',\n      } = movie;\n      const movieGenres = genreIds.map(genre => genresList[genre]);\n      return `<li class=\"card-set__item movie-card\"><a href=\"#?\" class=\"movie-card__link\" data-id=${id}><div class=\"movie-card__holder\"><img src=${\n        posterPath ? IMG_BASE + posterPath : defaultPoster\n      } alt=\"${title} poster\" class=\"movie-card__img\" width=\"100%\"></div>\n        <p class=\"movie-card__title\">${title}\n            </p><p class=\"movie-card__genre\">${\n              movieGenres.length < 3\n                ? movieGenres.join(', ')\n                : movieGenres.slice(0, 2).join(', ') + ', Other'\n            } ${movieGenres.length && releseDate ? '|' : ''}\n                <span class=\"movie-card__date\">${releseDate.slice(0, 4)}</span>\n            </p></a></li>`;\n    })\n    .join('');\n\n\n  return markup;\n\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1aYh8\")).toString();","// API-Key\n// 4c6e55add2f00844e9f979bd7b0fac7c\n\n//-created class with methods:\n//  -fetchMovies(movies for main page)\n//  -searchMovies(for search form)\n//  -getGenres(returned array of objects, which include genreID and genreName)\n\nexport default class FilmRestAPI {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async fetchMovies() {\n    const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n    const searchParams = new URLSearchParams({\n      page: this.page,\n    });\n    const BASE_URL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&${searchParams}`;\n\n    if (!localStorage.getItem('MOVIE_GENRES')) {\n      this.getGenres();\n    }\n\n    try {\n      const response = await fetch(BASE_URL);\n      const data = await response.json();\n\n      localStorage.removeItem('CURRENT_ITEMS');\n      localStorage.setItem('CURRENT_ITEMS', JSON.stringify(data));\n      this.incrementPage();\n\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async searchMovies() {\n    const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n    const searchParams = new URLSearchParams({\n      page: this.page,\n      query: this.searchQuery,\n    });\n\n    const BASE_URL = ` https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&${searchParams}`;\n\n    if (!localStorage.getItem('MOVIE_GENRES')) {\n      this.getGenres();\n    }\n\n    try {\n      const response = await fetch(BASE_URL);\n      const data = await response.json();\n      localStorage.removeItem('CURRENT_ITEMS');\n      localStorage.setItem('CURRENT_ITEMS', JSON.stringify(data));\n\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getGenres() {\n    const API_KEY = '4c6e55add2f00844e9f979bd7b0fac7c';\n    const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(BASE_URL);\n      const data = await response.json();\n\n      const parsedGenres = {};\n      data.genres.forEach(({ id, name }) => (parsedGenres[id] = name));\n      localStorage.setItem('MOVIE_GENRES', JSON.stringify(parsedGenres));\n\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  incrementPage() {\n    return (this.page += 1);\n  }\n\n  resetPage() {\n    return (this.page = 1);\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","export const refs = {\n  searchForm: document.querySelector('.search-form'),\n  galleryContainer: document.querySelector('.gallery'),\n  loadeMoreBtn: document.querySelector('button[type=\"submit\"]'),\n  cardSetEl: document.querySelector('.card-set'),\n  btnWatchAdd: document.querySelector('.add-watch'),\n  btnQuechAdd: document.querySelector('.add-que'),\n  libraryWatchedList: document.querySelector('.watched-library-list'),\n  libraryQueList: document.querySelector('.que-library-list'),\n  movieModal: document.querySelector('.modal'),\n};\n","import { refs } from './refs';\nimport defaultPoster from '../images/default-poster.jpg';\nimport refreshLibrary from './refresh-library'\n\nexport function openModal(films, id) {    \n  const selectedFilm = films.find(\n    movie => movie.id == id\n  );\n\n  if(!localStorage.getItem('QUEUE_MOVIES')) {\n    localStorage.setItem('QUEUE_MOVIES', JSON.stringify([]));\n     };\n  if(!localStorage.getItem('WATCHED_MOVIES')) {\n      localStorage.setItem('WATCHED_MOVIES', JSON.stringify([]));\n       }; \n  renderModal(selectedFilm);\n  refs.movieModal.parentElement.classList.toggle('is-hidden');\n\n  document.addEventListener('keydown', closeModal);\n  refs.movieModal.parentElement.addEventListener('click', closeModal)\n  refs.movieModal.querySelector('.btn-modal__watched').addEventListener('click', addToWatched);\n  refs.movieModal.querySelector('.btn-modal__queue').addEventListener('click', addToQueue);\n  \n  \n       \n       function addToWatched(evt) {\n               const watchedArr = JSON.parse(localStorage.getItem('WATCHED_MOVIES'));\n        const filmIdx = watchedArr.findIndex(el => el.id == id);\n        if(filmIdx == -1) {\n         watchedArr.unshift(selectedFilm);\n        } else {watchedArr.splice(filmIdx, 1)};\n        localStorage.setItem('WATCHED_MOVIES', JSON.stringify(watchedArr)); \n        evt.target.textContent = evt.target.textContent === 'ADD TO WATCHED' ? 'REMOVE FROM WATCHED' : 'ADD TO WATCHED';\n        refreshLibrary.refreshMarkup();\n      };\n      \n      function addToQueue(evt) {\n        const queueArr = JSON.parse(localStorage.getItem('QUEUE_MOVIES'));\n        const filmIdx = queueArr.findIndex(el => el.id == id);\n        if(filmIdx == -1) {\n          queueArr.push(selectedFilm);\n        } else {queueArr.splice(filmIdx, 1)};\n        evt.target.textContent = evt.target.textContent === 'ADD TO QUEUE' ? 'REMOVE FROM QUEUE' : 'ADD TO QUEUE';\n        localStorage.setItem('QUEUE_MOVIES', JSON.stringify(queueArr));\n        refreshLibrary.refreshMarkup();\n      };\n}\n\n// function addToWatched(evt) {\n//   const filmId = evt.target.dataset.id;\n//   const allFilmsObj = JSON.parse(localStorage.getItem('CURRENT_ITEMS'));\n//   const selectedFilm = allFilmsObj?.results.find(\n//     movie => movie.id == filmId\n//   );\n//   const watchedArr = JSON.parse(localStorage.getItem('WATCHED_MOVIES'));\n//   const filmIdx = watchedArr.findIndex(el => el.id == filmId);\n//   if(filmIdx == -1) {\n//     watchedArr.push(selectedFilm);\n//   } else {watchedArr.splice(filmIdx, 1)};\n//   localStorage.setItem('WATCHED_MOVIES', JSON.stringify(watchedArr));  \n// evt.target.textContent = evt.target.textContent === 'ADD TO WATCHED' ? 'REMOVE FROM WATCHED' : 'ADD TO WATCHED';\n// };\n\n// function addToQueue(evt) {\n//   const filmId = evt.target.dataset.id;\n//   const allFilmsObj = JSON.parse(localStorage.getItem('CURRENT_ITEMS'));\n//   const selectedFilm = allFilmsObj?.results.find(\n//     movie => movie.id == filmId\n//   );\n//   const queueArr = JSON.parse(localStorage.getItem('QUEUE_MOVIES'));\n//   const filmIdx = queueArr.findIndex(el => el.id == filmId);\n//   if(filmIdx == -1) {\n//     queueArr.push(selectedFilm);\n//   } else {queueArr.splice(filmIdx, 1)};\n//   localStorage.setItem('QUEUE_MOVIES', JSON.stringify(queueArr));\n// evt.target.textContent = evt.target.textContent === 'ADD TO QUEUE' ? 'REMOVE FROM QUEUE' : 'ADD TO QUEUE';\n     // };\n\n\nfunction renderModal({\n  poster_path: posterPath,\n  title,\n  id,\n  genre_ids: genreIds = [],\n  release_date: releseDate = '',\n  overview,\n  vote_average: voteAverage,\n  vote_count: voteCount,\n  popularity,\n  original_title: originalTitle,\n}) {\n  const IMG_BASE = 'https://image.tmdb.org/t/p/w400';\n  const genresList = JSON.parse(localStorage.getItem('MOVIE_GENRES'));\n  const movieGenres = genreIds.map(genre => genresList[genre]);\n  // console.log(allFilmsObj?.results[0]);\n\n  refs.movieModal.innerHTML = `<button class=\"btn-modal-close\" type=\"button\"></button>\n  <div class=\"modal-movie\"> <img src=${\n    posterPath ? IMG_BASE + posterPath : defaultPoster\n  } alt=\"${title} poster\" class=\"modal-movie__img\"></div>\n     <div class=\"modal__content\">\n      <h2 class='modal__title'>${title}</h2>\n    <table class='modal-info'>\n      <tr>\n        <td class='modal-info__title'>Vote / Votes</td>\n        <td class='modal-info__value'>\n          <span class='modal-info__rate'>${voteAverage ?voteAverage?.toFixed(1):'?'}</span>\n          /\n          <span class='modal-info__rate'>${voteCount}</span>\n        </td>\n      </tr>\n      <tr>\n        <td class='modal-info__title'>Popularity</td>\n        <td class='modal-info__value'>${popularity?.toFixed(1)}</td>\n      </tr>\n      <tr>\n        <td class='modal-info__title'>Original Title</td>\n        <td class='modal-info__value'>${originalTitle}</td>\n      </tr>\n      <tr>\n        <td class='modal-info__title'>Genre</td>\n        <td class='modal-movie-info__value'>${movieGenres.join(', ')}</td>\n      </tr>\n    </table>\n    <div class='modal-about'>\n      <h3 class='modal-about__title'>About</h3>\n      <p class='modal-about__desc'>${overview}</p>\n    </div>\n    <div class=\"modal__text\"></div>\n    <div class=\"modal-movie-btn\">\n      <button type=\"button\" class=\"btn-modal btn-modal__watched\" data-id=${id}>${localStorage.getItem('WATCHED_MOVIES')?.includes(id) ?'REMOVE FROM WATCHED' : 'ADD TO WATCHED'}</button>\n      <button type=\"button\" class=\"btn-modal btn-modal__queue\" data-id=${id}>${localStorage.getItem('QUEUE_MOVIES')?.includes(id) ?'REMOVE FROM QUEUE':'ADD TO QUEUE'}</button>\n    </div>\n  </div>`;\n}\n\nfunction closeModal(evt) {\n  if(!evt.target.classList.contains('backdrop') && !evt.target.classList.contains('btn-modal-close') && evt.key !== 'Escape') {\n    return;\n  }\n   refs.movieModal.parentElement.classList.add('is-hidden');\n  document.removeEventListener('keydown', closeModal);\n  evt.currentTarget.removeEventListener('click', closeModal);\n}\n","import { renderMovies } from './render-cards';\nimport { refs } from './refs';\n\n\n\nclass RefreshLibrary {\nset currentField(newField) {\n    this.field = newField;\n};\nget  currentField() {\n    return this.field;\n};\n\nrefreshMarkup() {\n    if(this.field === 'queue') {        \n        this.showQueue();\n        return;\n    } \n\n    if(this.field === 'watched') {\n        this.showWatched()\n    }\n}\n\nshowQueue() {\n    const markupFilms = renderMovies(JSON.parse(localStorage.getItem('QUEUE_MOVIES')));\n    refs.cardSetEl.innerHTML = markupFilms;\n    this.currentField = 'queue';\n    }\n    \nshowWatched() {\n    const markupFilms = renderMovies(JSON.parse(localStorage.getItem('WATCHED_MOVIES')));\n    refs.cardSetEl.innerHTML = markupFilms;\n    this.currentField = 'watched';\n}};\n\nexport default new RefreshLibrary();\n\n\n\n\n\n\n\n ","// const themeSwitch = document.querySelector('#switch');\n// const theme = document.querySelector('.theme');\n// const footer = document.querySelector('footer');\n// const footerContainer = document.querySelector('.footer__container');\n// const titleElements = document.querySelectorAll('.movie-card__title');\n// const genreElements = document.querySelectorAll('.movie-card__genre');\n\n// const setTheme = isDark => {\n//   localStorage.setItem('isDark', isDark);\n// };\n// // -------\n// const getTheme = () => {\n//   return localStorage.getItem('isDark') === 'true';\n// };\n\n// if (getTheme()) {\n//   document.body.classList.add('dark');\n//   theme.classList.add('active');\n//   themeSwitch.classList.add('active');\n//   footer.classList.add('active');\n//   footerContainer.classList.add('footer--dark');\n//   titleElements.forEach(title => {\n//     title.classList.add('active');\n//   });\n//   genreElements.forEach(genre => {\n//     genre.classList.add('active');\n//   });\n// } else {\n//   document.body.classList.remove('dark');\n//   theme.classList.remove('active');\n//   themeSwitch.classList.remove('active');\n//   footer.classList.remove('active');\n//   footerContainer.classList.remove('footer--dark');\n//   titleElements.forEach(title => {\n//     title.classList.remove('active');\n//   });\n//   genreElements.forEach(genre => {\n//     genre.classList.remove('active');\n//   });\n// }\n\n// document.querySelector('#theme').addEventListener('click', () => {\n//   const isDark = document.body.classList.toggle('dark');\n//   theme.classList.toggle('active');\n//   themeSwitch.classList.toggle('active');\n//   footer.classList.toggle('active');\n//   footerContainer.classList.toggle('footer--dark');\n//   titleElements.forEach(title => {\n//     title.classList.toggle('active');\n//   });\n//   genreElements.forEach(genre => {\n//     genre.classList.toggle('active');\n//   });\n\n//   setTheme(isDark);\n// });\n// -------------\nconst themeSwitch = document.querySelector('#switch');\nconst theme = document.querySelector('.theme');\nconst footer = document.querySelector('footer');\nconst footerContainer = document.querySelector('.footer__container');\nconst titleElements = document.querySelectorAll('.movie-card__title');\nconst genreElements = document.querySelectorAll('.movie-card__genre');\n\nconst starsElement = document.querySelector('.anim-stars');\n\nconst setTheme = isDark => {\n  localStorage.setItem('isDark', isDark);\n};\n\nconst getTheme = () => {\n  return localStorage.getItem('isDark') === 'true';\n};\n\nif (getTheme()) {\n  document.body.classList.add('dark');\n  theme.classList.add('active');\n  themeSwitch.classList.add('active');\n  footer.classList.add('active');\n  footerContainer.classList.add('footer--dark');\n\n  starsElement.classList.add('stars');\n  titleElements.forEach(title => {\n    title.classList.add('active');\n  });\n  genreElements.forEach(genre => {\n    genre.classList.add('active');\n  });\n} else {\n  document.body.classList.remove('dark');\n  theme.classList.remove('active');\n  themeSwitch.classList.remove('active');\n  footer.classList.remove('active');\n  footerContainer.classList.remove('footer--dark');\n  starsElement.classList.remove('stars');\n  titleElements.forEach(title => {\n    title.classList.remove('active');\n  });\n  genreElements.forEach(genre => {\n    genre.classList.remove('active');\n  });\n}\n\ndocument.querySelector('#theme').addEventListener('click', () => {\n  const isDark = document.body.classList.toggle('dark');\n  theme.classList.toggle('active');\n  themeSwitch.classList.toggle('active');\n  footer.classList.toggle('active');\n  footerContainer.classList.toggle('footer--dark');\n  starsElement.classList.toggle('stars');\n  titleElements.forEach(title => {\n    title.classList.toggle('active');\n  });\n  genreElements.forEach(genre => {\n    genre.classList.toggle('active');\n  });\n\n  setTheme(isDark);\n});\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"eM9ss\\\":\\\"library.e0dbc128.js\\\",\\\"1aYh8\\\":\\\"default-poster.ff5560e1.jpg\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$ahbk6","parcelRequire","$13315e1086e5db7e$export$1a30573fde3dfc62","movies","genresList","JSON","parse","localStorage","getItem","map","movie","poster_path","posterPath","title","genre_ids","genreIds","release_date","releseDate","movieGenres","genre","$parcel$interopDefault","join","slice","module","exports","URL","resolve","import","meta","url","toString","$201d38579cbc5611$export$2e2bcd8739ae039","constructor","this","searchQuery","page","async","BASE_URL","URLSearchParams","getGenres","response","fetch","data","json","removeItem","setItem","stringify","incrementPage","console","log","error","query","parsedGenres","genres","forEach","name","resetPage","newQuery","$ee27a4d7c64fc8c4$export$21666b427502ea6d","searchForm","document","querySelector","galleryContainer","loadeMoreBtn","cardSetEl","btnWatchAdd","btnQuechAdd","libraryWatchedList","libraryQueList","movieModal","$krGWQ","$c17b1ec6c0f07977$export$a7f6cffb6b8ba11c","films","selectedFilm","find","overview","vote_average","voteAverage","vote_count","voteCount","popularity","original_title","originalTitle","IMG_BASE","refs","innerHTML","toFixed","includes","$c17b1ec6c0f07977$var$renderModal","parentElement","classList","toggle","addEventListener","$c17b1ec6c0f07977$var$closeModal","evt","watchedArr","filmIdx","findIndex","el","unshift","splice","target","textContent","$bP8zf","default","refreshMarkup","queueArr","push","contains","key","add","removeEventListener","currentTarget","$1Ea6K","$89bb1a766cf32580$export$2e2bcd8739ae039","currentField","newField","field","showWatched","showQueue","markupFilms","renderMovies","$38bc8b2c82e947f6$var$themeSwitch","$38bc8b2c82e947f6$var$theme","$38bc8b2c82e947f6$var$footer","$38bc8b2c82e947f6$var$footerContainer","$38bc8b2c82e947f6$var$titleElements","querySelectorAll","$38bc8b2c82e947f6$var$genreElements","$38bc8b2c82e947f6$var$starsElement","body","remove","isDark","$38bc8b2c82e947f6$var$setTheme","register"],"version":3,"file":"library.e0dbc128.js.map"}